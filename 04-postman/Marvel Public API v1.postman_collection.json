{
	"info": {
		"_postman_id": "8c37ea7e-d6ae-48c7-8fa5-4689405f65b5",
		"name": "Marvel Public API v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Characters",
			"item": [
				{
					"name": "List characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/characters?name=&nameStartsWith=&modifiedSince=&comics=&series=&events=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"characters"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return characters with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only characters which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only characters which appear in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							]
						},
						"description": "Fetches lists of characters."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/characters?name=&nameStartsWith=&modifiedSince=&comics=&series=&events=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"characters"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return characters with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only characters which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only characters which appear in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									]
								},
								"description": "Fetches lists of characters."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Character by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/characters/:characterId",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"characters",
								":characterId"
							],
							"variable": [
								{
									"key": "characterId"
								}
							]
						},
						"description": "Fetches a single character by id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/characters/:characterId",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"characters",
										":characterId"
									],
									"variable": [
										{
											"key": "characterId"
										}
									]
								},
								"description": "Fetches a single character by id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Character comics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"characters",
								":characterId",
								"comics"
							],
							"query": [
								{
									"key": "format",
									"value": "",
									"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
								},
								{
									"key": "formatType",
									"value": "",
									"description": "Filter by the issue format type (comic or collection)."
								},
								{
									"key": "noVariants",
									"value": "",
									"description": "Exclude variant comics from the result set."
								},
								{
									"key": "dateDescriptor",
									"value": "",
									"description": "Return comics within a predefined date range."
								},
								{
									"key": "dateRange",
									"value": "",
									"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
								},
								{
									"key": "diamondCode",
									"value": "",
									"description": "Filter by diamond code."
								},
								{
									"key": "digitalId",
									"value": "",
									"description": "Filter by digital comic id."
								},
								{
									"key": "upc",
									"value": "",
									"description": "Filter by UPC."
								},
								{
									"key": "isbn",
									"value": "",
									"description": "Filter by ISBN."
								},
								{
									"key": "ean",
									"value": "",
									"description": "Filter by EAN."
								},
								{
									"key": "issn",
									"value": "",
									"description": "Filter by ISSN."
								},
								{
									"key": "hasDigitalIssue",
									"value": "",
									"description": "Include only results which are available digitally."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only comics which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "sharedAppearances",
									"value": "",
									"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
								},
								{
									"key": "collaborators",
									"value": "",
									"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "characterId"
								}
							]
						},
						"description": "Fetches lists of comics filtered by a character id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"characters",
										":characterId",
										"comics"
									],
									"query": [
										{
											"key": "format",
											"value": "",
											"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
										},
										{
											"key": "formatType",
											"value": "",
											"description": "Filter by the issue format type (comic or collection)."
										},
										{
											"key": "noVariants",
											"value": "",
											"description": "Exclude variant comics from the result set."
										},
										{
											"key": "dateDescriptor",
											"value": "",
											"description": "Return comics within a predefined date range."
										},
										{
											"key": "dateRange",
											"value": "",
											"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
										},
										{
											"key": "diamondCode",
											"value": "",
											"description": "Filter by diamond code."
										},
										{
											"key": "digitalId",
											"value": "",
											"description": "Filter by digital comic id."
										},
										{
											"key": "upc",
											"value": "",
											"description": "Filter by UPC."
										},
										{
											"key": "isbn",
											"value": "",
											"description": "Filter by ISBN."
										},
										{
											"key": "ean",
											"value": "",
											"description": "Filter by EAN."
										},
										{
											"key": "issn",
											"value": "",
											"description": "Filter by ISSN."
										},
										{
											"key": "hasDigitalIssue",
											"value": "",
											"description": "Include only results which are available digitally."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only comics which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "sharedAppearances",
											"value": "",
											"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
										},
										{
											"key": "collaborators",
											"value": "",
											"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "characterId"
										}
									]
								},
								"description": "Fetches lists of comics filtered by a character id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Character events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/events?name=&nameStartsWith=&modifiedSince=&creators=&series=&comics=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"characters",
								":characterId",
								"events"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Filter the event list by name."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return events with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only events which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "characterId"
								}
							]
						},
						"description": "Fetches lists of events filtered by a character id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/events?name=&nameStartsWith=&modifiedSince=&creators=&series=&comics=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"characters",
										":characterId",
										"events"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter the event list by name."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return events with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only events which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "characterId"
										}
									]
								},
								"description": "Fetches lists of events filtered by a character id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Character series",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&events=&creators=&seriesType=&contains=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"characters",
								":characterId",
								"series"
							],
							"query": [
								{
									"key": "title",
									"value": "",
									"description": "Filter by series title."
								},
								{
									"key": "titleStartsWith",
									"value": "",
									"description": "Return series with titles that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "startYear",
									"value": "",
									"description": "Return only series matching the specified start year."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only series which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "seriesType",
									"value": "",
									"description": "Filter the series by publication frequency type."
								},
								{
									"key": "contains",
									"value": "",
									"description": "Return only series containing one or more comics with the specified format."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "characterId"
								}
							]
						},
						"description": "Fetches lists of series filtered by a character id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&events=&creators=&seriesType=&contains=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"characters",
										":characterId",
										"series"
									],
									"query": [
										{
											"key": "title",
											"value": "",
											"description": "Filter by series title."
										},
										{
											"key": "titleStartsWith",
											"value": "",
											"description": "Return series with titles that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "startYear",
											"value": "",
											"description": "Return only series matching the specified start year."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only series which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "seriesType",
											"value": "",
											"description": "Filter the series by publication frequency type."
										},
										{
											"key": "contains",
											"value": "",
											"description": "Return only series containing one or more comics with the specified format."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "characterId"
										}
									]
								},
								"description": "Fetches lists of series filtered by a character id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Character stories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/stories?modifiedSince=&comics=&series=&events=&creators=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"characters",
								":characterId",
								"stories"
							],
							"query": [
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only stories which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "characterId"
								}
							]
						},
						"description": "Fetches lists of stories filtered by a character id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/characters/:characterId/stories?modifiedSince=&comics=&series=&events=&creators=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"characters",
										":characterId",
										"stories"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only stories which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "characterId"
										}
									]
								},
								"description": "Fetches lists of stories filtered by a character id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "**Characters** are people and organizations which appear in comics. They are also assigned to stories initially and bubbled up to issues, series and events."
		},
		{
			"name": "Comics",
			"item": [
				{
					"name": "List comics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"comics"
							],
							"query": [
								{
									"key": "format",
									"value": "",
									"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
								},
								{
									"key": "formatType",
									"value": "",
									"description": "Filter by the issue format type (comic or collection)."
								},
								{
									"key": "noVariants",
									"value": "",
									"description": "Exclude variants (alternate covers, secondary printings, director's cuts, etc.) from the result set."
								},
								{
									"key": "dateDescriptor",
									"value": "",
									"description": "Return comics within a predefined date range."
								},
								{
									"key": "dateRange",
									"value": "",
									"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
								},
								{
									"key": "diamondCode",
									"value": "",
									"description": "Filter by diamond code."
								},
								{
									"key": "digitalId",
									"value": "",
									"description": "Filter by digital comic id."
								},
								{
									"key": "upc",
									"value": "",
									"description": "Filter by UPC."
								},
								{
									"key": "isbn",
									"value": "",
									"description": "Filter by ISBN."
								},
								{
									"key": "ean",
									"value": "",
									"description": "Filter by EAN."
								},
								{
									"key": "issn",
									"value": "",
									"description": "Filter by ISSN."
								},
								{
									"key": "hasDigitalIssue",
									"value": "",
									"description": "Include only results which are available digitally."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only comics which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "sharedAppearances",
									"value": "",
									"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear). Accepts a comma-separated list of ids."
								},
								{
									"key": "collaborators",
									"value": "",
									"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work). Accepts a comma-separated list of ids."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							]
						},
						"description": "Fetches lists of comics."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"comics"
									],
									"query": [
										{
											"key": "format",
											"value": "",
											"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
										},
										{
											"key": "formatType",
											"value": "",
											"description": "Filter by the issue format type (comic or collection)."
										},
										{
											"key": "noVariants",
											"value": "",
											"description": "Exclude variants (alternate covers, secondary printings, director's cuts, etc.) from the result set."
										},
										{
											"key": "dateDescriptor",
											"value": "",
											"description": "Return comics within a predefined date range."
										},
										{
											"key": "dateRange",
											"value": "",
											"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
										},
										{
											"key": "diamondCode",
											"value": "",
											"description": "Filter by diamond code."
										},
										{
											"key": "digitalId",
											"value": "",
											"description": "Filter by digital comic id."
										},
										{
											"key": "upc",
											"value": "",
											"description": "Filter by UPC."
										},
										{
											"key": "isbn",
											"value": "",
											"description": "Filter by ISBN."
										},
										{
											"key": "ean",
											"value": "",
											"description": "Filter by EAN."
										},
										{
											"key": "issn",
											"value": "",
											"description": "Filter by ISSN."
										},
										{
											"key": "hasDigitalIssue",
											"value": "",
											"description": "Include only results which are available digitally."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only comics which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "sharedAppearances",
											"value": "",
											"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear). Accepts a comma-separated list of ids."
										},
										{
											"key": "collaborators",
											"value": "",
											"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work). Accepts a comma-separated list of ids."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									]
								},
								"description": "Fetches lists of comics."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Comic by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/comics/:comicId",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"comics",
								":comicId"
							],
							"variable": [
								{
									"key": "comicId"
								}
							]
						},
						"description": "Fetches a single comic by id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/comics/:comicId",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"comics",
										":comicId"
									],
									"variable": [
										{
											"key": "comicId"
										}
									]
								},
								"description": "Fetches a single comic by id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Comic characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/characters?name=&nameStartsWith=&modifiedSince=&series=&events=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"comics",
								":comicId",
								"characters"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return characters with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only characters which have been modified since the specified date."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "comicId"
								}
							]
						},
						"description": "Fetches lists of characters filtered by a comic id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/characters?name=&nameStartsWith=&modifiedSince=&series=&events=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"comics",
										":comicId",
										"characters"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return characters with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only characters which have been modified since the specified date."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "comicId"
										}
									]
								},
								"description": "Fetches lists of characters filtered by a comic id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Comic creators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"comics",
								":comicId",
								"creators"
							],
							"query": [
								{
									"key": "firstName",
									"value": "",
									"description": "Filter by creator first name (e.g. brian)."
								},
								{
									"key": "middleName",
									"value": "",
									"description": "Filter by creator middle name (e.g. Michael)."
								},
								{
									"key": "lastName",
									"value": "",
									"description": "Filter by creator last name (e.g. Bendis)."
								},
								{
									"key": "suffix",
									"value": "",
									"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Filter by creator names that match critera (e.g. B, St L)."
								},
								{
									"key": "firstNameStartsWith",
									"value": "",
									"description": "Filter by creator first names that match critera (e.g. B, St L)."
								},
								{
									"key": "middleNameStartsWith",
									"value": "",
									"description": "Filter by creator middle names that match critera (e.g. Mi)."
								},
								{
									"key": "lastNameStartsWith",
									"value": "",
									"description": "Filter by creator last names that match critera (e.g. Ben)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only creators which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "comicId"
								}
							]
						},
						"description": "Fetches lists of creators filtered by a comic id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"comics",
										":comicId",
										"creators"
									],
									"query": [
										{
											"key": "firstName",
											"value": "",
											"description": "Filter by creator first name (e.g. brian)."
										},
										{
											"key": "middleName",
											"value": "",
											"description": "Filter by creator middle name (e.g. Michael)."
										},
										{
											"key": "lastName",
											"value": "",
											"description": "Filter by creator last name (e.g. Bendis)."
										},
										{
											"key": "suffix",
											"value": "",
											"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Filter by creator names that match critera (e.g. B, St L)."
										},
										{
											"key": "firstNameStartsWith",
											"value": "",
											"description": "Filter by creator first names that match critera (e.g. B, St L)."
										},
										{
											"key": "middleNameStartsWith",
											"value": "",
											"description": "Filter by creator middle names that match critera (e.g. Mi)."
										},
										{
											"key": "lastNameStartsWith",
											"value": "",
											"description": "Filter by creator last names that match critera (e.g. Ben)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only creators which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "comicId"
										}
									]
								},
								"description": "Fetches lists of creators filtered by a comic id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Comic events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&series=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"comics",
								":comicId",
								"events"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Filter the event list by name."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return events with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only events which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "comicId"
								}
							]
						},
						"description": "Fetches lists of events filtered by a comic id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&series=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"comics",
										":comicId",
										"events"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter the event list by name."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return events with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only events which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "comicId"
										}
									]
								},
								"description": "Fetches lists of events filtered by a comic id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Comic stories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/stories?modifiedSince=&series=&events=&creators=&characters=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"comics",
								":comicId",
								"stories"
							],
							"query": [
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only stories which have been modified since the specified date."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources."
								}
							],
							"variable": [
								{
									"key": "comicId"
								}
							]
						},
						"description": "Fetches lists of stories filtered by a comic id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/comics/:comicId/stories?modifiedSince=&series=&events=&creators=&characters=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"comics",
										":comicId",
										"stories"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only stories which have been modified since the specified date."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources."
										}
									],
									"variable": [
										{
											"key": "comicId"
										}
									]
								},
								"description": "Fetches lists of stories filtered by a comic id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Comic issues (or just **comics**) are the physical or digital products that end-users read. (The Marvel Comics API returns comic issues, collections, graphic novels and digital comics as part of the overall comics endpoint and entity type.)"
		},
		{
			"name": "Creators",
			"item": [
				{
					"name": "List creators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&events=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"creators"
							],
							"query": [
								{
									"key": "firstName",
									"value": "",
									"description": "Filter by creator first name (e.g. Brian)."
								},
								{
									"key": "middleName",
									"value": "",
									"description": "Filter by creator middle name (e.g. Michael)."
								},
								{
									"key": "lastName",
									"value": "",
									"description": "Filter by creator last name (e.g. Bendis)."
								},
								{
									"key": "suffix",
									"value": "",
									"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Filter by creator names that match critera (e.g. B, St L)."
								},
								{
									"key": "firstNameStartsWith",
									"value": "",
									"description": "Filter by creator first names that match critera (e.g. B, St L)."
								},
								{
									"key": "middleNameStartsWith",
									"value": "",
									"description": "Filter by creator middle names that match critera (e.g. Mi)."
								},
								{
									"key": "lastNameStartsWith",
									"value": "",
									"description": "Filter by creator last names that match critera (e.g. Ben)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only creators which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							]
						},
						"description": "Fetches lists of creators."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&events=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"creators"
									],
									"query": [
										{
											"key": "firstName",
											"value": "",
											"description": "Filter by creator first name (e.g. Brian)."
										},
										{
											"key": "middleName",
											"value": "",
											"description": "Filter by creator middle name (e.g. Michael)."
										},
										{
											"key": "lastName",
											"value": "",
											"description": "Filter by creator last name (e.g. Bendis)."
										},
										{
											"key": "suffix",
											"value": "",
											"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Filter by creator names that match critera (e.g. B, St L)."
										},
										{
											"key": "firstNameStartsWith",
											"value": "",
											"description": "Filter by creator first names that match critera (e.g. B, St L)."
										},
										{
											"key": "middleNameStartsWith",
											"value": "",
											"description": "Filter by creator middle names that match critera (e.g. Mi)."
										},
										{
											"key": "lastNameStartsWith",
											"value": "",
											"description": "Filter by creator last names that match critera (e.g. Ben)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only creators which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									]
								},
								"description": "Fetches lists of creators."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creator by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"creators",
								":creatorId"
							],
							"variable": [
								{
									"key": "creatorId"
								}
							]
						},
						"description": "Fetches a single creator by id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"creators",
										":creatorId"
									],
									"variable": [
										{
											"key": "creatorId"
										}
									]
								},
								"description": "Fetches a single creator by id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creator comics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&characters=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"creators",
								":creatorId",
								"comics"
							],
							"query": [
								{
									"key": "format",
									"value": "",
									"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
								},
								{
									"key": "formatType",
									"value": "",
									"description": "Filter by the issue format type (comic or collection)."
								},
								{
									"key": "noVariants",
									"value": "",
									"description": "Exclude variant comics from the result set."
								},
								{
									"key": "dateDescriptor",
									"value": "",
									"description": "Return comics within a predefined date range."
								},
								{
									"key": "dateRange",
									"value": "",
									"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
								},
								{
									"key": "diamondCode",
									"value": "",
									"description": "Filter by diamond code."
								},
								{
									"key": "digitalId",
									"value": "",
									"description": "Filter by digital comic id."
								},
								{
									"key": "upc",
									"value": "",
									"description": "Filter by UPC."
								},
								{
									"key": "isbn",
									"value": "",
									"description": "Filter by ISBN."
								},
								{
									"key": "ean",
									"value": "",
									"description": "Filter by EAN."
								},
								{
									"key": "issn",
									"value": "",
									"description": "Filter by ISSN."
								},
								{
									"key": "hasDigitalIssue",
									"value": "",
									"description": "Include only results which are available digitally."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only comics which have been modified since the specified date."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "sharedAppearances",
									"value": "",
									"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
								},
								{
									"key": "collaborators",
									"value": "",
									"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "creatorId"
								}
							]
						},
						"description": "Fetches lists of comics filtered by a creator id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&characters=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"creators",
										":creatorId",
										"comics"
									],
									"query": [
										{
											"key": "format",
											"value": "",
											"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
										},
										{
											"key": "formatType",
											"value": "",
											"description": "Filter by the issue format type (comic or collection)."
										},
										{
											"key": "noVariants",
											"value": "",
											"description": "Exclude variant comics from the result set."
										},
										{
											"key": "dateDescriptor",
											"value": "",
											"description": "Return comics within a predefined date range."
										},
										{
											"key": "dateRange",
											"value": "",
											"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
										},
										{
											"key": "diamondCode",
											"value": "",
											"description": "Filter by diamond code."
										},
										{
											"key": "digitalId",
											"value": "",
											"description": "Filter by digital comic id."
										},
										{
											"key": "upc",
											"value": "",
											"description": "Filter by UPC."
										},
										{
											"key": "isbn",
											"value": "",
											"description": "Filter by ISBN."
										},
										{
											"key": "ean",
											"value": "",
											"description": "Filter by EAN."
										},
										{
											"key": "issn",
											"value": "",
											"description": "Filter by ISSN."
										},
										{
											"key": "hasDigitalIssue",
											"value": "",
											"description": "Include only results which are available digitally."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only comics which have been modified since the specified date."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "sharedAppearances",
											"value": "",
											"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
										},
										{
											"key": "collaborators",
											"value": "",
											"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "creatorId"
										}
									]
								},
								"description": "Fetches lists of comics filtered by a creator id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creator events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/events?name=&nameStartsWith=&modifiedSince=&characters=&series=&comics=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"creators",
								":creatorId",
								"events"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Filter the event list by name."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return events with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only events which have been modified since the specified date."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "creatorId"
								}
							]
						},
						"description": "Fetches lists of events filtered by a creator id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/events?name=&nameStartsWith=&modifiedSince=&characters=&series=&comics=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"creators",
										":creatorId",
										"events"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter the event list by name."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return events with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only events which have been modified since the specified date."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "creatorId"
										}
									]
								},
								"description": "Fetches lists of events filtered by a creator id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creator series",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&events=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"creators",
								":creatorId",
								"series"
							],
							"query": [
								{
									"key": "title",
									"value": "",
									"description": "Filter by series title."
								},
								{
									"key": "titleStartsWith",
									"value": "",
									"description": "Return series with titles that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "startYear",
									"value": "",
									"description": "Return only series matching the specified start year."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only series which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "seriesType",
									"value": "",
									"description": "Filter the series by publication frequency type."
								},
								{
									"key": "contains",
									"value": "",
									"description": "Return only series containing one or more comics with the specified format."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "creatorId"
								}
							]
						},
						"description": "Fetches lists of series filtered by a creator id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&events=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"creators",
										":creatorId",
										"series"
									],
									"query": [
										{
											"key": "title",
											"value": "",
											"description": "Filter by series title."
										},
										{
											"key": "titleStartsWith",
											"value": "",
											"description": "Return series with titles that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "startYear",
											"value": "",
											"description": "Return only series matching the specified start year."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only series which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "seriesType",
											"value": "",
											"description": "Filter the series by publication frequency type."
										},
										{
											"key": "contains",
											"value": "",
											"description": "Return only series containing one or more comics with the specified format."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "creatorId"
										}
									]
								},
								"description": "Fetches lists of series filtered by a creator id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creator stories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/stories?modifiedSince=&comics=&series=&events=&characters=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"creators",
								":creatorId",
								"stories"
							],
							"query": [
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only stories which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only stories contained in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "creatorId"
								}
							]
						},
						"description": "Fetches lists of stories filtered by a creator id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/creators/:creatorId/stories?modifiedSince=&comics=&series=&events=&characters=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"creators",
										":creatorId",
										"stories"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only stories which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only stories contained in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "creatorId"
										}
									]
								},
								"description": "Fetches lists of stories filtered by a creator id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "**Creators** are the people and entities that make comics. \nThey are assigned to the specific comic stories on which they worked, \nbut we bubble up those assignments to the issues, series and events in which the stories appear as a convenience."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "List events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&series=&comics=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"events"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Return only events which match the specified name."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return events with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only events which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only events which take place in the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							]
						},
						"description": "Fetches lists of events."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&series=&comics=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"events"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Return only events which match the specified name."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return events with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only events which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only events which take place in the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									]
								},
								"description": "Fetches lists of events."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/events/:eventId",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"events",
								":eventId"
							],
							"variable": [
								{
									"key": "eventId"
								}
							]
						},
						"description": "Fetches a single event by id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/events/:eventId",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								},
								"description": "Fetches a single event by id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/events/:eventId/characters?name=&nameStartsWith=&modifiedSince=&comics=&series=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"events",
								":eventId",
								"characters"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return characters with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only characters which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "eventId"
								}
							]
						},
						"description": "Fetches lists of characters filtered by an event id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/events/:eventId/characters?name=&nameStartsWith=&modifiedSince=&comics=&series=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"events",
										":eventId",
										"characters"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return characters with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only characters which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								},
								"description": "Fetches lists of characters filtered by an event id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event comics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/events/:eventId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"events",
								":eventId",
								"comics"
							],
							"query": [
								{
									"key": "format",
									"value": "",
									"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
								},
								{
									"key": "formatType",
									"value": "",
									"description": "Filter by the issue format type (comic or collection)."
								},
								{
									"key": "noVariants",
									"value": "",
									"description": "Exclude variant comics from the result set."
								},
								{
									"key": "dateDescriptor",
									"value": "",
									"description": "Return comics within a predefined date range."
								},
								{
									"key": "dateRange",
									"value": "",
									"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
								},
								{
									"key": "diamondCode",
									"value": "",
									"description": "Filter by diamond code."
								},
								{
									"key": "digitalId",
									"value": "",
									"description": "Filter by digital comic id."
								},
								{
									"key": "upc",
									"value": "",
									"description": "Filter by UPC."
								},
								{
									"key": "isbn",
									"value": "",
									"description": "Filter by ISBN."
								},
								{
									"key": "ean",
									"value": "",
									"description": "Filter by EAN."
								},
								{
									"key": "issn",
									"value": "",
									"description": "Filter by ISSN."
								},
								{
									"key": "hasDigitalIssue",
									"value": "",
									"description": "Include only results which are available digitally."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only comics which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "sharedAppearances",
									"value": "",
									"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
								},
								{
									"key": "collaborators",
									"value": "",
									"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "eventId"
								}
							]
						},
						"description": "Fetches lists of comics filtered by an event id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/events/:eventId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&series=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"events",
										":eventId",
										"comics"
									],
									"query": [
										{
											"key": "format",
											"value": "",
											"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
										},
										{
											"key": "formatType",
											"value": "",
											"description": "Filter by the issue format type (comic or collection)."
										},
										{
											"key": "noVariants",
											"value": "",
											"description": "Exclude variant comics from the result set."
										},
										{
											"key": "dateDescriptor",
											"value": "",
											"description": "Return comics within a predefined date range."
										},
										{
											"key": "dateRange",
											"value": "",
											"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
										},
										{
											"key": "diamondCode",
											"value": "",
											"description": "Filter by diamond code."
										},
										{
											"key": "digitalId",
											"value": "",
											"description": "Filter by digital comic id."
										},
										{
											"key": "upc",
											"value": "",
											"description": "Filter by UPC."
										},
										{
											"key": "isbn",
											"value": "",
											"description": "Filter by ISBN."
										},
										{
											"key": "ean",
											"value": "",
											"description": "Filter by EAN."
										},
										{
											"key": "issn",
											"value": "",
											"description": "Filter by ISSN."
										},
										{
											"key": "hasDigitalIssue",
											"value": "",
											"description": "Include only results which are available digitally."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only comics which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "sharedAppearances",
											"value": "",
											"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
										},
										{
											"key": "collaborators",
											"value": "",
											"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								},
								"description": "Fetches lists of comics filtered by an event id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event creators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/events/:eventId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"events",
								":eventId",
								"creators"
							],
							"query": [
								{
									"key": "firstName",
									"value": "",
									"description": "Filter by creator first name (e.g. brian)."
								},
								{
									"key": "middleName",
									"value": "",
									"description": "Filter by creator middle name (e.g. Michael)."
								},
								{
									"key": "lastName",
									"value": "",
									"description": "Filter by creator last name (e.g. Bendis)."
								},
								{
									"key": "suffix",
									"value": "",
									"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Filter by creator names that match critera (e.g. B, St L)."
								},
								{
									"key": "firstNameStartsWith",
									"value": "",
									"description": "Filter by creator first names that match critera (e.g. B, St L)."
								},
								{
									"key": "middleNameStartsWith",
									"value": "",
									"description": "Filter by creator middle names that match critera (e.g. Mi)."
								},
								{
									"key": "lastNameStartsWith",
									"value": "",
									"description": "Filter by creator last names that match critera (e.g. Ben)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only creators which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "eventId"
								}
							]
						},
						"description": "Fetches lists of creators filtered by an event id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/events/:eventId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"events",
										":eventId",
										"creators"
									],
									"query": [
										{
											"key": "firstName",
											"value": "",
											"description": "Filter by creator first name (e.g. brian)."
										},
										{
											"key": "middleName",
											"value": "",
											"description": "Filter by creator middle name (e.g. Michael)."
										},
										{
											"key": "lastName",
											"value": "",
											"description": "Filter by creator last name (e.g. Bendis)."
										},
										{
											"key": "suffix",
											"value": "",
											"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Filter by creator names that match critera (e.g. B, St L)."
										},
										{
											"key": "firstNameStartsWith",
											"value": "",
											"description": "Filter by creator first names that match critera (e.g. B, St L)."
										},
										{
											"key": "middleNameStartsWith",
											"value": "",
											"description": "Filter by creator middle names that match critera (e.g. Mi)."
										},
										{
											"key": "lastNameStartsWith",
											"value": "",
											"description": "Filter by creator last names that match critera (e.g. Ben)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only creators which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								},
								"description": "Fetches lists of creators filtered by an event id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event series",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/events/:eventId/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&creators=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"events",
								":eventId",
								"series"
							],
							"query": [
								{
									"key": "title",
									"value": "",
									"description": "Filter by series title."
								},
								{
									"key": "titleStartsWith",
									"value": "",
									"description": "Return series with titles that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "startYear",
									"value": "",
									"description": "Return only series matching the specified start year."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only series which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "seriesType",
									"value": "",
									"description": "Filter the series by publication frequency type."
								},
								{
									"key": "contains",
									"value": "",
									"description": "Return only series containing one or more comics with the specified format."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "eventId"
								}
							]
						},
						"description": "Fetches lists of series filtered by an event id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/events/:eventId/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&creators=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"events",
										":eventId",
										"series"
									],
									"query": [
										{
											"key": "title",
											"value": "",
											"description": "Filter by series title."
										},
										{
											"key": "titleStartsWith",
											"value": "",
											"description": "Return series with titles that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "startYear",
											"value": "",
											"description": "Return only series matching the specified start year."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only series which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "seriesType",
											"value": "",
											"description": "Filter the series by publication frequency type."
										},
										{
											"key": "contains",
											"value": "",
											"description": "Return only series containing one or more comics with the specified format."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								},
								"description": "Fetches lists of series filtered by an event id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event stories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/events/:eventId/stories?modifiedSince=&comics=&series=&creators=&characters=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"events",
								":eventId",
								"stories"
							],
							"query": [
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only stories which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "eventId"
								}
							]
						},
						"description": "Fetches lists of stories filtered by an event id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/events/:eventId/stories?modifiedSince=&comics=&series=&creators=&characters=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"events",
										":eventId",
										"stories"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only stories which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								},
								"description": "Fetches lists of stories filtered by an event id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Comics can also be a part of an **event**, which is a big, universe-changing storyline. \nA comic's appearance in an event is often independent of its membership in a series."
		},
		{
			"name": "Series",
			"item": [
				{
					"name": "List series",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&events=&creators=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"series"
							],
							"query": [
								{
									"key": "title",
									"value": "",
									"description": "Return only series matching the specified title."
								},
								{
									"key": "titleStartsWith",
									"value": "",
									"description": "Return series with titles that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "startYear",
									"value": "",
									"description": "Return only series matching the specified start year."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only series which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "seriesType",
									"value": "",
									"description": "Filter the series by publication frequency type."
								},
								{
									"key": "contains",
									"value": "",
									"description": "Return only series containing one or more comics with the specified format."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							]
						},
						"description": "Fetches lists of series."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/series?title=&titleStartsWith=&startYear=&modifiedSince=&comics=&stories=&events=&creators=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"series"
									],
									"query": [
										{
											"key": "title",
											"value": "",
											"description": "Return only series matching the specified title."
										},
										{
											"key": "titleStartsWith",
											"value": "",
											"description": "Return series with titles that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "startYear",
											"value": "",
											"description": "Return only series matching the specified start year."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only series which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "seriesType",
											"value": "",
											"description": "Filter the series by publication frequency type."
										},
										{
											"key": "contains",
											"value": "",
											"description": "Return only series containing one or more comics with the specified format."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									]
								},
								"description": "Fetches lists of series."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Series by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/series/:seriesId",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"series",
								":seriesId"
							],
							"variable": [
								{
									"key": "seriesId"
								}
							]
						},
						"description": "Fetches a single comic series by id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/series/:seriesId",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"series",
										":seriesId"
									],
									"variable": [
										{
											"key": "seriesId"
										}
									]
								},
								"description": "Fetches a single comic series by id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Series characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/characters?name=&nameStartsWith=&modifiedSince=&comics=&events=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"series",
								":seriesId",
								"characters"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return characters with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only characters which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "seriesId"
								}
							]
						},
						"description": "Fetches lists of characters filtered by a series id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/characters?name=&nameStartsWith=&modifiedSince=&comics=&events=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"series",
										":seriesId",
										"characters"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return characters with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only characters which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "seriesId"
										}
									]
								},
								"description": "Fetches lists of characters filtered by a series id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Series comics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"series",
								":seriesId",
								"comics"
							],
							"query": [
								{
									"key": "format",
									"value": "",
									"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
								},
								{
									"key": "formatType",
									"value": "",
									"description": "Filter by the issue format type (comic or collection)."
								},
								{
									"key": "noVariants",
									"value": "",
									"description": "Exclude variant comics from the result set."
								},
								{
									"key": "dateDescriptor",
									"value": "",
									"description": "Return comics within a predefined date range."
								},
								{
									"key": "dateRange",
									"value": "",
									"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
								},
								{
									"key": "diamondCode",
									"value": "",
									"description": "Filter by diamond code."
								},
								{
									"key": "digitalId",
									"value": "",
									"description": "Filter by digital comic id."
								},
								{
									"key": "upc",
									"value": "",
									"description": "Filter by UPC."
								},
								{
									"key": "isbn",
									"value": "",
									"description": "Filter by ISBN."
								},
								{
									"key": "ean",
									"value": "",
									"description": "Filter by EAN."
								},
								{
									"key": "issn",
									"value": "",
									"description": "Filter by ISSN."
								},
								{
									"key": "hasDigitalIssue",
									"value": "",
									"description": "Include only results which are available digitally."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only comics which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "sharedAppearances",
									"value": "",
									"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
								},
								{
									"key": "collaborators",
									"value": "",
									"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "seriesId"
								}
							]
						},
						"description": "Fetches lists of comics filtered by a series id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&events=&stories=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"series",
										":seriesId",
										"comics"
									],
									"query": [
										{
											"key": "format",
											"value": "",
											"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
										},
										{
											"key": "formatType",
											"value": "",
											"description": "Filter by the issue format type (comic or collection)."
										},
										{
											"key": "noVariants",
											"value": "",
											"description": "Exclude variant comics from the result set."
										},
										{
											"key": "dateDescriptor",
											"value": "",
											"description": "Return comics within a predefined date range."
										},
										{
											"key": "dateRange",
											"value": "",
											"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
										},
										{
											"key": "diamondCode",
											"value": "",
											"description": "Filter by diamond code."
										},
										{
											"key": "digitalId",
											"value": "",
											"description": "Filter by digital comic id."
										},
										{
											"key": "upc",
											"value": "",
											"description": "Filter by UPC."
										},
										{
											"key": "isbn",
											"value": "",
											"description": "Filter by ISBN."
										},
										{
											"key": "ean",
											"value": "",
											"description": "Filter by EAN."
										},
										{
											"key": "issn",
											"value": "",
											"description": "Filter by ISSN."
										},
										{
											"key": "hasDigitalIssue",
											"value": "",
											"description": "Include only results which are available digitally."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only comics which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "sharedAppearances",
											"value": "",
											"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
										},
										{
											"key": "collaborators",
											"value": "",
											"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "seriesId"
										}
									]
								},
								"description": "Fetches lists of comics filtered by a series id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Series creators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&events=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"series",
								":seriesId",
								"creators"
							],
							"query": [
								{
									"key": "firstName",
									"value": "",
									"description": "Filter by creator first name (e.g. brian)."
								},
								{
									"key": "middleName",
									"value": "",
									"description": "Filter by creator middle name (e.g. Michael)."
								},
								{
									"key": "lastName",
									"value": "",
									"description": "Filter by creator last name (e.g. Bendis)."
								},
								{
									"key": "suffix",
									"value": "",
									"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Filter by creator names that match critera (e.g. B, St L)."
								},
								{
									"key": "firstNameStartsWith",
									"value": "",
									"description": "Filter by creator first names that match critera (e.g. B, St L)."
								},
								{
									"key": "middleNameStartsWith",
									"value": "",
									"description": "Filter by creator middle names that match critera (e.g. Mi)."
								},
								{
									"key": "lastNameStartsWith",
									"value": "",
									"description": "Filter by creator last names that match critera (e.g. Ben)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only creators which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "seriesId"
								}
							]
						},
						"description": "Fetches lists of creators filtered by a series id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&events=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"series",
										":seriesId",
										"creators"
									],
									"query": [
										{
											"key": "firstName",
											"value": "",
											"description": "Filter by creator first name (e.g. brian)."
										},
										{
											"key": "middleName",
											"value": "",
											"description": "Filter by creator middle name (e.g. Michael)."
										},
										{
											"key": "lastName",
											"value": "",
											"description": "Filter by creator last name (e.g. Bendis)."
										},
										{
											"key": "suffix",
											"value": "",
											"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Filter by creator names that match critera (e.g. B, St L)."
										},
										{
											"key": "firstNameStartsWith",
											"value": "",
											"description": "Filter by creator first names that match critera (e.g. B, St L)."
										},
										{
											"key": "middleNameStartsWith",
											"value": "",
											"description": "Filter by creator middle names that match critera (e.g. Mi)."
										},
										{
											"key": "lastNameStartsWith",
											"value": "",
											"description": "Filter by creator last names that match critera (e.g. Ben)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only creators which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "seriesId"
										}
									]
								},
								"description": "Fetches lists of creators filtered by a series id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Series events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&comics=&stories=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"series",
								":seriesId",
								"events"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Filter the event list by name."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return events with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only events which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "stories",
									"value": "",
									"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "seriesId"
								}
							]
						},
						"description": "Fetches lists of events filtered by a series id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&comics=&stories=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"series",
										":seriesId",
										"events"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter the event list by name."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return events with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only events which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "stories",
											"value": "",
											"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "seriesId"
										}
									]
								},
								"description": "Fetches lists of events filtered by a series id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Series stories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/stories?modifiedSince=&comics=&events=&creators=&characters=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"series",
								":seriesId",
								"stories"
							],
							"query": [
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only stories which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "seriesId"
								}
							]
						},
						"description": "Fetches lists of stories filtered by a series id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/series/:seriesId/stories?modifiedSince=&comics=&events=&creators=&characters=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"series",
										":seriesId",
										"stories"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only stories which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "seriesId"
										}
									]
								},
								"description": "Fetches lists of stories filtered by a series id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Comics belong to a **series**, which is a (usually) sequentially number list of comics with the same title and volume. \nMarvel uses the year of original publication for a series as the volume number."
		},
		{
			"name": "Stories",
			"item": [
				{
					"name": "List stories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/stories?modifiedSince=&comics=&series=&events=&creators=&characters=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"stories"
							],
							"query": [
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only stories which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							]
						},
						"description": "Fetches lists of stories."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/stories?modifiedSince=&comics=&series=&events=&creators=&characters=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"stories"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only stories which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only stories contained in the specified (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only stories contained the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									]
								},
								"description": "Fetches lists of stories."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Story by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/stories/:storyId",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"stories",
								":storyId"
							],
							"variable": [
								{
									"key": "storyId"
								}
							]
						},
						"description": "Fetches a single comic story by id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/stories/:storyId",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"stories",
										":storyId"
									],
									"variable": [
										{
											"key": "storyId"
										}
									]
								},
								"description": "Fetches a single comic story by id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Story characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/characters?name=&nameStartsWith=&modifiedSince=&comics=&series=&events=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"stories",
								":storyId",
								"characters"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return characters with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only characters which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "storyId"
								}
							]
						},
						"description": "Fetches lists of characters filtered by a story id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/characters?name=&nameStartsWith=&modifiedSince=&comics=&series=&events=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"stories",
										":storyId",
										"characters"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Return only characters matching the specified full character name (e.g. Spider-Man)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return characters with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only characters which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "storyId"
										}
									]
								},
								"description": "Fetches lists of characters filtered by a story id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Story comics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&series=&events=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"stories",
								":storyId",
								"comics"
							],
							"query": [
								{
									"key": "format",
									"value": "",
									"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
								},
								{
									"key": "formatType",
									"value": "",
									"description": "Filter by the issue format type (comic or collection)."
								},
								{
									"key": "noVariants",
									"value": "",
									"description": "Exclude variant comics from the result set."
								},
								{
									"key": "dateDescriptor",
									"value": "",
									"description": "Return comics within a predefined date range."
								},
								{
									"key": "dateRange",
									"value": "",
									"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
								},
								{
									"key": "diamondCode",
									"value": "",
									"description": "Filter by diamond code."
								},
								{
									"key": "digitalId",
									"value": "",
									"description": "Filter by digital comic id."
								},
								{
									"key": "upc",
									"value": "",
									"description": "Filter by UPC."
								},
								{
									"key": "isbn",
									"value": "",
									"description": "Filter by ISBN."
								},
								{
									"key": "ean",
									"value": "",
									"description": "Filter by EAN."
								},
								{
									"key": "issn",
									"value": "",
									"description": "Filter by ISSN."
								},
								{
									"key": "hasDigitalIssue",
									"value": "",
									"description": "Include only results which are available digitally."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only comics which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "sharedAppearances",
									"value": "",
									"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
								},
								{
									"key": "collaborators",
									"value": "",
									"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "storyId"
								}
							]
						},
						"description": "Fetches lists of comics filtered by a story id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/comics?format=&formatType=&noVariants=&dateDescriptor=&dateRange=&diamondCode=&digitalId=&upc=&isbn=&ean=&issn=&hasDigitalIssue=&modifiedSince=&creators=&characters=&series=&events=&sharedAppearances=&collaborators=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"stories",
										":storyId",
										"comics"
									],
									"query": [
										{
											"key": "format",
											"value": "",
											"description": "Filter by the issue format (e.g. comic, digital comic, hardcover)."
										},
										{
											"key": "formatType",
											"value": "",
											"description": "Filter by the issue format type (comic or collection)."
										},
										{
											"key": "noVariants",
											"value": "",
											"description": "Exclude variant comics from the result set."
										},
										{
											"key": "dateDescriptor",
											"value": "",
											"description": "Return comics within a predefined date range."
										},
										{
											"key": "dateRange",
											"value": "",
											"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format."
										},
										{
											"key": "diamondCode",
											"value": "",
											"description": "Filter by diamond code."
										},
										{
											"key": "digitalId",
											"value": "",
											"description": "Filter by digital comic id."
										},
										{
											"key": "upc",
											"value": "",
											"description": "Filter by UPC."
										},
										{
											"key": "isbn",
											"value": "",
											"description": "Filter by ISBN."
										},
										{
											"key": "ean",
											"value": "",
											"description": "Filter by EAN."
										},
										{
											"key": "issn",
											"value": "",
											"description": "Filter by ISSN."
										},
										{
											"key": "hasDigitalIssue",
											"value": "",
											"description": "Include only results which are available digitally."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only comics which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "sharedAppearances",
											"value": "",
											"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear)."
										},
										{
											"key": "collaborators",
											"value": "",
											"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "storyId"
										}
									]
								},
								"description": "Fetches lists of comics filtered by a story id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Story creators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&events=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"stories",
								":storyId",
								"creators"
							],
							"query": [
								{
									"key": "firstName",
									"value": "",
									"description": "Filter by creator first name (e.g. brian)."
								},
								{
									"key": "middleName",
									"value": "",
									"description": "Filter by creator middle name (e.g. Michael)."
								},
								{
									"key": "lastName",
									"value": "",
									"description": "Filter by creator last name (e.g. Bendis)."
								},
								{
									"key": "suffix",
									"value": "",
									"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Filter by creator names that match critera (e.g. B, St L)."
								},
								{
									"key": "firstNameStartsWith",
									"value": "",
									"description": "Filter by creator first names that match critera (e.g. B, St L)."
								},
								{
									"key": "middleNameStartsWith",
									"value": "",
									"description": "Filter by creator middle names that match critera (e.g. Mi)."
								},
								{
									"key": "lastNameStartsWith",
									"value": "",
									"description": "Filter by creator last names that match critera (e.g. Ben)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only creators which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "events",
									"value": "",
									"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "storyId"
								}
							]
						},
						"description": "Fetches lists of creators filtered by a story id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/creators?firstName=&middleName=&lastName=&suffix=&nameStartsWith=&firstNameStartsWith=&middleNameStartsWith=&lastNameStartsWith=&modifiedSince=&comics=&series=&events=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"stories",
										":storyId",
										"creators"
									],
									"query": [
										{
											"key": "firstName",
											"value": "",
											"description": "Filter by creator first name (e.g. brian)."
										},
										{
											"key": "middleName",
											"value": "",
											"description": "Filter by creator middle name (e.g. Michael)."
										},
										{
											"key": "lastName",
											"value": "",
											"description": "Filter by creator last name (e.g. Bendis)."
										},
										{
											"key": "suffix",
											"value": "",
											"description": "Filter by suffix or honorific (e.g. Jr., Sr.)."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Filter by creator names that match critera (e.g. B, St L)."
										},
										{
											"key": "firstNameStartsWith",
											"value": "",
											"description": "Filter by creator first names that match critera (e.g. B, St L)."
										},
										{
											"key": "middleNameStartsWith",
											"value": "",
											"description": "Filter by creator middle names that match critera (e.g. Mi)."
										},
										{
											"key": "lastNameStartsWith",
											"value": "",
											"description": "Filter by creator last names that match critera (e.g. Ben)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only creators which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "events",
											"value": "",
											"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "storyId"
										}
									]
								},
								"description": "Fetches lists of creators filtered by a story id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Story events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&series=&comics=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"stories",
								":storyId",
								"events"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Filter the event list by name."
								},
								{
									"key": "nameStartsWith",
									"value": "",
									"description": "Return events with names that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only events which have been modified since the specified date."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "series",
									"value": "",
									"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "storyId"
								}
							]
						},
						"description": "Fetches lists of events filtered by a story id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/events?name=&nameStartsWith=&modifiedSince=&creators=&characters=&series=&comics=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"stories",
										":storyId",
										"events"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter the event list by name."
										},
										{
											"key": "nameStartsWith",
											"value": "",
											"description": "Return events with names that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only events which have been modified since the specified date."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "series",
											"value": "",
											"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids)."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "storyId"
										}
									]
								},
								"description": "Fetches lists of events filtered by a story id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Story series",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/series?events=&title=&titleStartsWith=&startYear=&modifiedSince=&comics=&creators=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
							"protocol": "http",
							"host": [
								"gateway",
								"marvel",
								"com"
							],
							"path": [
								"v1",
								"public",
								"stories",
								":storyId",
								"series"
							],
							"query": [
								{
									"key": "events",
									"value": "",
									"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
								},
								{
									"key": "title",
									"value": "",
									"description": "Filter by series title."
								},
								{
									"key": "titleStartsWith",
									"value": "",
									"description": "Return series with titles that begin with the specified string (e.g. Sp)."
								},
								{
									"key": "startYear",
									"value": "",
									"description": "Return only series matching the specified start year."
								},
								{
									"key": "modifiedSince",
									"value": "",
									"description": "Return only series which have been modified since the specified date."
								},
								{
									"key": "comics",
									"value": "",
									"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
								},
								{
									"key": "creators",
									"value": "",
									"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
								},
								{
									"key": "characters",
									"value": "",
									"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
								},
								{
									"key": "seriesType",
									"value": "",
									"description": "Filter the series by publication frequency type."
								},
								{
									"key": "contains",
									"value": "",
									"description": "Return only series containing one or more comics with the specified format."
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the result set to the specified number of resources."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Skip the specified number of resources in the result set."
								}
							],
							"variable": [
								{
									"key": "storyId"
								}
							]
						},
						"description": "Fetches lists of series filtered by a story id."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://gateway.marvel.com/v1/public/stories/:storyId/series?events=&title=&titleStartsWith=&startYear=&modifiedSince=&comics=&creators=&characters=&seriesType=&contains=&orderBy=&limit=&offset=",
									"protocol": "http",
									"host": [
										"gateway",
										"marvel",
										"com"
									],
									"path": [
										"v1",
										"public",
										"stories",
										":storyId",
										"series"
									],
									"query": [
										{
											"key": "events",
											"value": "",
											"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids)."
										},
										{
											"key": "title",
											"value": "",
											"description": "Filter by series title."
										},
										{
											"key": "titleStartsWith",
											"value": "",
											"description": "Return series with titles that begin with the specified string (e.g. Sp)."
										},
										{
											"key": "startYear",
											"value": "",
											"description": "Return only series matching the specified start year."
										},
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Return only series which have been modified since the specified date."
										},
										{
											"key": "comics",
											"value": "",
											"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids)."
										},
										{
											"key": "creators",
											"value": "",
											"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids)."
										},
										{
											"key": "characters",
											"value": "",
											"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids)."
										},
										{
											"key": "seriesType",
											"value": "",
											"description": "Filter the series by publication frequency type."
										},
										{
											"key": "contains",
											"value": "",
											"description": "Return only series containing one or more comics with the specified format."
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "Order the result set by a field or fields. Add a \"-\" to the value sort in descending order. Multiple values are given priority in the order in which they are passed."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the result set to the specified number of resources."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Skip the specified number of resources in the result set."
										}
									],
									"variable": [
										{
											"key": "storyId"
										}
									]
								},
								"description": "Fetches lists of series filtered by a story id."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Comics are made up of **stories**, which are indivisible components of comics. Most comics have two stories - a cover and an interior story - but many, such as anthology comics and collections, will have more. Stories may be re-published in several comics, but the comic in which they originally appeared will always be present as a data point."
		}
	]
}